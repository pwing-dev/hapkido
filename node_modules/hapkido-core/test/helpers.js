const mongoose    = require('mongoose');
const mockgoose   = require('mockgoose');
const Application = require('hapkido-core/models/application');

// helpers.js will be run as a test case, too, before any other test in
// the subdirectories. So this can be used to set up the global environment.
// And even if it wasn't run: The first test to require this file would
// also trigger the setup.
before(function(done) {
  // sets up a mock database
  mongoose.Promise = Promise;
  mockgoose(mongoose).then(() => {
    mongoose.connect('', done);
  }, done);
});

module.exports = {
  unmockgoose: done => {
    if (mongoose.isMocked) {
      mockgoose.reset(done);
    }
  },
  app: {
    promiseSetupComplete: () => new Promise((resolve, reject) =>
      Application.setSetupComplete(err => {
        if (err) reject();
        else resolve();
      })
    ),
    promiseAppStateReloaded: () => new Promise((resolve, reject) => 
      Application._forceReload(err => {
        if (err) reject(err);
        else resolve();
      })
    )
  }
};
